[{"/Users/justinhee/Desktop/daily-tracker/client/src/index.js":"1","/Users/justinhee/Desktop/daily-tracker/client/src/App.js":"2","/Users/justinhee/Desktop/daily-tracker/client/src/pages/register/Register.jsx":"3","/Users/justinhee/Desktop/daily-tracker/client/src/pages/Home.jsx":"4","/Users/justinhee/Desktop/daily-tracker/client/src/pages/login/Login.jsx":"5","/Users/justinhee/Desktop/daily-tracker/client/src/components/calendar/Calendar.jsx":"6","/Users/justinhee/Desktop/daily-tracker/client/src/components/topbar/TopBar.jsx":"7","/Users/justinhee/Desktop/daily-tracker/client/src/date.js":"8","/Users/justinhee/Desktop/daily-tracker/client/src/components/editDay/EditDay.jsx":"9"},{"size":221,"mtime":1629619310405,"results":"10","hashOfConfig":"11"},{"size":568,"mtime":1632338783656,"results":"12","hashOfConfig":"11"},{"size":2167,"mtime":1632338536986,"results":"13","hashOfConfig":"11"},{"size":259,"mtime":1632333082628,"results":"14","hashOfConfig":"11"},{"size":869,"mtime":1632336246153,"results":"15","hashOfConfig":"11"},{"size":3148,"mtime":1632333505153,"results":"16","hashOfConfig":"11"},{"size":284,"mtime":1631510973850,"results":"17","hashOfConfig":"11"},{"size":498,"mtime":1629622982962,"results":"18","hashOfConfig":"11"},{"size":1292,"mtime":1632335970108,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ko5voe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/justinhee/Desktop/daily-tracker/client/src/index.js",[],["40","41"],"/Users/justinhee/Desktop/daily-tracker/client/src/App.js",[],"/Users/justinhee/Desktop/daily-tracker/client/src/pages/register/Register.jsx",[],"/Users/justinhee/Desktop/daily-tracker/client/src/pages/Home.jsx",[],"/Users/justinhee/Desktop/daily-tracker/client/src/pages/login/Login.jsx",[],"/Users/justinhee/Desktop/daily-tracker/client/src/components/calendar/Calendar.jsx",["42","43"],"import \"./calendar.css\"\nimport { daysInMonth, firstDayOfMonth, months, weekdays } from \"../../date\";\nimport { useEffect, useState } from 'react';\nimport EditDay from \"../editDay/EditDay\";\nimport axios from 'axios';\n\n\nexport default function Calendar() {\n    const [entries, setEntries] = useState([]);\n    useEffect(() => {\n        const fetchEntries = async () => {\n            const res = await axios.get(\"/entries\");\n            console.log(res.data)\n            setEntries(res.data);\n        }\n        fetchEntries();\n    }, [])\n\n    const [buttonPopup, setButtonPopup] = useState(false);\n    const [selectedDay, setSelectedDay] = useState(0);\n\n    const [month, setMonth] = useState(new Date().getMonth());\n    const [year, setYear] = useState(new Date().getFullYear());\n\n    const [selectedEntry, setSelectedEntry] = useState([]);\n\n\n    const prevMonth = () => {\n        if (month === 0) {\n            setYear(prevYear => prevYear - 1);\n            setMonth(11);\n        } else {\n            setMonth(prevMonth => prevMonth - 1);\n        }\n    }\n    const nextMonth = () => {\n        if (month === 11) {\n            setYear(prevYear => prevYear + 1);\n            setMonth(0);\n        } else {\n            setMonth(prevMonth => prevMonth + 1);\n        }\n    }\n\n    const d = daysInMonth(month, year);\n    const days = Array.from({ length: d }, (_, i) => i + 1);\n    const dayToBeginTheMonthFrom = firstDayOfMonth(month, year);\n    const firstDayStyle = { gridColumnStart: dayToBeginTheMonthFrom + 1 };\n\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"monthButtons\">\n                <button className=\"changeMonthButton\" onClick={prevMonth}>prev</button>\n                <button className=\"changeMonthButton\" onClick={nextMonth}>next</button>\n            </div>\n            \n            <span className=\"month\">\n                {months[month]} {year}\n            </span>\n            <div className=\"days\">\n                {weekdays.map(weekday => {\n                    return <span key={weekday} className=\"weekday\">{weekday}</span>\n                })}\n                {days.map((day) => {\n                    const dateString = `${year}-${month+1}-${day}`;\n                    const entry = entries.find(entry => entry.date === dateString);\n                    const content = entry ? entry.entry : '';\n                    return (\n                        <button className=\"day\"\n                            key={day}\n                            style={day === 1 ? firstDayStyle : {}}\n                            onClick={() => {\n                                setSelectedDay(day);\n                                setButtonPopup(true);\n                            }}>\n                            <p>{day}</p>\n                            <div className=\"content\">\n                                <p>{content}</p>\n                            </div>\n                        </button>\n                    )\n                })}\n            </div>\n            <EditDay trigger={buttonPopup} setTrigger={() => setButtonPopup(false)} entries={entries} day={selectedDay} month={month} year={year}/>\n        </div>\n    )\n}\n","/Users/justinhee/Desktop/daily-tracker/client/src/components/topbar/TopBar.jsx",[],"/Users/justinhee/Desktop/daily-tracker/client/src/date.js",[],"/Users/justinhee/Desktop/daily-tracker/client/src/components/editDay/EditDay.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":25,"column":12,"nodeType":"50","messageId":"51","endLine":25,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":25,"column":27,"nodeType":"50","messageId":"51","endLine":25,"endColumn":43},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'selectedEntry' is assigned a value but never used.","Identifier","unusedVar","'setSelectedEntry' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]